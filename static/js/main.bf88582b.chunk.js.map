{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","mainFeaturesPost","position","color","palette","common","white","marginBottom","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","backgroundColor","mainFeaturesPostContent","padding","marginTop","cardMedia","paddingTop","cards","App","classes","AppBar","Container","fixed","Toolbar","IconButton","edge","aria-label","className","Typography","variant","Box","mr","Button","Paper","style","backgroundImage","Grid","container","item","md","component","gutterBottom","paragraph","mainContent","maxWidth","align","mainButtons","justify","cardGrid","map","card","xs","sm","Card","CardMedia","image","CardContent","CartContent","CardActions","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf88582b.chunk.js","sourcesContent":["import {AppBar, Container, IconButton, Toolbar, Typography, Box, Paper, Grid, \r\n  CardActions, Card, CardMedia, CardContent } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LayerIcon from '@material-ui/icons/Layers';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\n\r\nconst useStyles = makeStyles( (theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(1)\r\n  }, \r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  mainFeaturesPost: {\r\n    position:\"relative\",\r\n    color: theme.palette.common.white,\r\n    marginBottom: theme.spacing(4),\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\"\r\n  },\r\n  overlay: {\r\n    position:\"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\"\r\n  },\r\n  mainFeaturesPostContent: {\r\n    position: \"relative\",\r\n    padding: theme.spacing(9),\r\n    marginTop: theme.spacing(7)\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\"\r\n  }\r\n}))\r\n\r\n\r\nconst cards = [1,2,3,4,5,6,7,8,9];\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n     <AppBar position=\"fixed\">\r\n       <Container fixed>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\"  \r\n              color=\"inherit\" aria-label=\"menu\" \r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title} >\r\n              Three Screen Solutions\r\n            </Typography>\r\n            <Box mr={3}>\r\n              <Button color=\"inherit\" variant=\"outlined\">\r\n                Log in\r\n              </Button>\r\n            </Box>\r\n            <Button color=\"secondary\" variant=\"contained\">\r\n                Sign Up\r\n              </Button>\r\n          </Toolbar>\r\n       </Container>\r\n     </AppBar>\r\n\r\n     <main>\r\n       <Paper className={classes.mainFeaturesPost} \r\n        style={{ backgroundImage: `url(https://source.unsplash.com/random)`}}>\r\n          <Container fixed>\r\n            <div className={classes.overlay} />\r\n            <Grid container>\r\n              <Grid item md={6}>\r\n                <div className={classes.mainFeaturesPostContent}>\r\n                  <Typography\r\n                    component=\"h1\" \r\n                    variant=\"h3\" \r\n                    color=\"inherit\" \r\n                    gutterBottom \r\n                  > Working in 3SS</Typography>\r\n                  <Typography\r\n                    variant=\"h6\" \r\n                    color=\"inherit\" \r\n                    paragraph\r\n                  > We are delighted to announce that Connected TV World Summit 2021 will take place as adigital event on 15th-16th June. Registration is now open for the No.1 strategy conference\r\n                  </Typography>\r\n                  <Button variant=\"contained\" color=\"secondary\">\r\n                    Learn more\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n       </Paper>\r\n       <div className={classes.mainContent}>\r\n         <Container maxWidth=\"md\">\r\n           <Typography \r\n           variant=\"h2\" \r\n           align=\"center\" \r\n           color=\"textPrimary\" \r\n           gutterBottom>\r\n           Create the Future of YOUR Entertainment\r\n           </Typography>\r\n           <Typography \r\n           variant=\"h5\" \r\n           align=\"center\" \r\n           color=\"textSecondary\" \r\n           paragraph>\r\n           We are delighted to announce that Connected TV World Summit 2021 will take place as adigital event on 15th-16th June. Registration is now open for the No.1 strategy conference. We are delighted to announce that Connected TV World Summit 2021 will take place as adigital event on 15th-16th June. Registration is now open for the No.1 strategy conference\r\n           </Typography>\r\n           <div className={classes.mainButtons}>\r\n             <Grid container spacing={5} \r\n             justify=\"center\">\r\n               <Grid item>\r\n                 <Button variant=\"contained\" color=\"primary\">Start now</Button>\r\n               </Grid>\r\n               <Grid item>\r\n                <Button variant=\"outlined\" color=\"primary\">Learn more</Button>\r\n               </Grid>\r\n             </Grid>\r\n           </div>\r\n         </Container>\r\n       </div>\r\n       <Container className={classes.cardGrid} maxWidth=\"md\">\r\n        <Grid container spacing={4}>\r\n          {cards.map( (card) => (\r\n            <Grid item key={card} xs={12} sm={6} md={4}>\r\n                  <Card className={classes.card}>\r\n                    <CardMedia \r\n                      className={classes.cardMedia} \r\n                      image=\"https://source.unsplash.com/random\" \r\n                      title=\"Image title\"\r\n                    />\r\n                    <CardContent className={classes.CartContent}>\r\n                      <Typography variant=\"h5\" gutterBottom>\r\n                        Blog post\r\n                      </Typography>\r\n                      <Typography>\r\n                        Blog post. Three Screen Solutions Three Screen Solutions Three Screen SolutionsThree Screen Solutions\r\n                      </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        View\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        Edit\r\n                      </Button>\r\n                      <LayerIcon />\r\n                      <PlayCircleFilledIcon />\r\n                    </CardActions>\r\n                  </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n       </Container>\r\n     </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}